<!DOCTYPE html>

<html>
	
<head>
	<title>tAPIColumn</title>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="description" content="Help for the DataFlex Database Update Framework" />
    <meta name="generator" content="HelpNDoc Professional Edition 7.1.0.253" />
	
	
	
	<link type="text/css" rel="stylesheet" media="all" href="css/reset.css" />
	<link type="text/css" rel="stylesheet" media="all" href="css/base.css" />
	<link type="text/css" rel="stylesheet" media="all" href="css/hnd.css" />
	<!--[if lte IE 8]>
		<link type="text/css" rel="stylesheet" media="all" href="css/ielte8.css" />
	<![endif]-->

	<style type="text/css">
		#topic_header
		{
			background-color: #EFEFEF;
		}
	</style>

	

	<script type="text/javascript" src="js/chmRelative.js"></script>
	
	
</head>

<body>



	
	
	<div id="topic_content">
		
<p></p>
<h1 class="rvps7"><span class="rvts0"><span class="rvts23">tAPIColumn - The Database Update Framework</span></span></h1>
<p class="rvps13"><span class="rvts65">See Also: </span><a class="rvts96" href="LanguageGuide.chm::/Declaring_Variables.htm">Declaring Variables</a><span class="rvts65">, </span><a class="rvts96" href="Struct.htm">Struct</a><span class="rvts65">&nbsp;</span></p>
<h3 class="rvps24"><span class="rvts0"><span class="rvts55">Purpose</span></span></h3>
<p class="rvps13"><span class="rvts65">tAPIColumn is a </span><a class="rvts96" href="LanguageGuide.chm::/Struct_Type.htm">structured type</a><span class="rvts65"> used for some members of the </span><a class="rvts22" href="cDbUpdateFunctionLibrary.htm">cDbUpdateFunctionLibrary</a><span class="rvts65"> class. The struct can be passed as a parameter to the e.g. ApiTableCreate function to make it easier (less code writing) to create a new table.</span></p>
<p class="rvps13"><span class="rvts65">&nbsp;</span></p>
<h3 class="rvps24"><span class="rvts0"><span class="rvts55">Type Declaration</span></span></h3>
<p class="rvps22"><span class="rvts35">Struct tAPIColumn&nbsp;</span></p>
<p class="rvps22"><span class="rvts35">&nbsp; &nbsp; String sFieldName&nbsp;</span></p>
<p class="rvps22"><span class="rvts35">&nbsp; &nbsp; Integer iType&nbsp;</span></p>
<p class="rvps22"><span class="rvts35">&nbsp; &nbsp; Integer iLength&nbsp;</span></p>
<p class="rvps22"><span class="rvts35">&nbsp; &nbsp; Integer iPrecision&nbsp;</span></p>
<p class="rvps22"><span class="rvts35">&nbsp; &nbsp; Integer iOptions&nbsp;</span></p>
<p class="rvps22"><span class="rvts35">End_Struct</span></p>
<p class="rvps22"><span class="rvts35"><br/></span></p>
<h4 class="rvps25"><span class="rvts0"><span class="rvts58">&nbsp;</span></span></h4>
<h3 class="rvps24"><span class="rvts0"><span class="rvts55">Struct Members</span></span></h3>
<p class="rvps13"><span class="rvts58">sFieldName</span></p>
<p class="rvps26"><span class="rvts65">The name of the new field/column.</span></p>
<p class="rvps13"><span class="rvts58">iType</span></p>
<p class="rvps26"><span class="rvts65">A constant integer representing the database column type. E.g. DF_ASCII_DUF, SQL_CHAR, &nbsp;SQL_VARCHAR, &nbsp;SQL_FLOAT et al. These constants are defined in these packages; CLI.pkg, MSSQLDRV.pkg, DB2_DRV.pkg, ODBC_DRV.pkg or Mertech.inc. There are different constant integers to be used for each database back-end. Please see the </span><a class="rvts22" href="MappingofSQLDataTypes.htm">Mapping of SQL Data Types</a><span class="rvts65"> chapter tables.</span></p>
<p class="rvps13"><span class="rvts58">iLength</span></p>
<p class="rvps26"><span class="rvts65">The length for the field.</span></p>
<p class="rvps13"><span class="rvts58">iPrecision</span></p>
<p class="rvps26"><span class="rvts65">The number of decimals (if any).</span></p>
<p class="rvps13"><span class="rvts58">sDFType</span></p>
<p class="rvps26"><span class="rvts65">The corresponding DataFlex data type. One of; "ASCII", "Numeric", "Date", "Text", "Binary" or "DateTime"</span></p>
<p class="rvps13"><span class="rvts58">iOptions</span></p>
<p class="rvps26"><span class="rvts65">C_tAPIColumn_Identity can be passed to indicate that the field/column should be set at the SQL back-end as a primary key. Only applicable for SQL drivers.</span></p>
<h3 class="rvps24"><span class="rvts0"><span class="rvts55">Syntax</span></span></h3>
<p class="rvps22"><span class="rvts35">Use cDbUpdateFunctionLibrary.pkg</span></p>
<p class="rvps22"><span class="rvts35">:</span></p>
<p class="rvps22"><span class="rvts35">tColumnType {variableName}</span></p>
<p class="rvps13"><span class="rvts65">&nbsp;</span></p>
<h3 class="rvps24"><span class="rvts0"><span class="rvts55">Declaring variables</span></span></h3>
<p class="rvps13"><span class="rvts65">To declare tColumnType variables, use the name of the type (tColumnType) followed by the variable name.</span></p>
<p class="rvps22"><span class="rvts35">tAPIColumn[] APIColumnArray</span></p>
<p class="rvps13"><span class="rvts65">See </span><a class="rvts96" href="LanguageGuide.chm::/Struct_Variables.htm">struct variables</a><span class="rvts65"> for more details of instantiating struct types.</span></p>
<p class="rvps2"><span class="rvts6"><br/></span></p>
<p></p>

	</div>
	
	
		<div id="topic_footer">

			<div id="topic_footer_content">
				Copyright &copy; 2016-2020 RDC Tools International. All Rights Reserved. Portions Copyright Data Access Worldwide, Mertech Data Systems, Inc.
			</div>
		</div>
	

	
	

	
</body>
	
</html>

