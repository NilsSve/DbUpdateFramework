Use Windows.pkg

#IF (Required_RT_Version > 18)
Use cCommandLinkButton.pkg
Class cHeaderGroupImage is a cCommandLinkButton
#ELSE
Use Dfbitmap.pkg
Class cHeaderGroupImage is a BitmapContainer
#ENDIF
    Procedure Construct_Object
        Forward Send Construct_Object
        #IF (Required_RT_Version > 18)
            Set piImageSize to 24
        #ELSE
            Set Border_Style to Border_None
            Set Bitmap_Style to Bitmap_Center
        #ENDIF
        Set Focus_Mode to NonFocusable
    End_Procedure

    #IF (Required_RT_Version > 18)
    #ELSE
    Procedure Set Color Integer eColor
    End_Procedure
    #ENDIF

    Procedure OnClick
        Broadcast Send Prompt of (Parent(Self))
    End_Procedure

    Procedure Set Bitmap String sBitmapName
        #IF (Required_RT_Version > 18)
        Forward Set psImage to sBitmapName
        #ELSE
        Forward Set Bitmap to sBitmapName
        #ENDIF
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object
    End_Procedure

End_Class

// Intermediate class - don't use.
Class _cHeaderGroup is a Container3d

    Register_Object oInfo_tb

    Procedure Construct_Object
        Forward Send Construct_Object

        { Visibility=Private }
        Property String private.psImage
        { Visibility=Private }
        Property String private.psLabel
    End_Procedure

    { MethodType=Property }
    Procedure Set psImage String sImage
        Set private.psImage to sImage
    End_Procedure

    Function psImage Returns String
        Function_Return (private.psImage(Self))
    End_Function

    { MethodType=Property }
    Procedure Set psLabel String sLabel
        Set private.psLabel to sLabel
    End_Procedure

    Function psLabel Returns String
        Function_Return (private.psLabel(Self))
    End_Function

    { Visibility=Private }
    // Don't display but allow to use old "Label" syntax to set the value of the oInfo_tb object (header text)
    Procedure Set Label String sLabel
        Set private.psLabel to sLabel
        Set Label of oInfo_tb to sLabel
    End_Procedure

    { Visibility=Private }
    Function Label Returns String
        Function_Return (private.psLabel(Self))
    End_Function

End_Class

{ OverrideProperty=Bitmap DesignTime=False }
{ OverrideProperty=Bitmap_Style DesignTime=False }
{ OverrideProperty=Transparent_State DesignTime=False }
Class cHeaderGroup is a _cHeaderGroup

    Procedure Construct_Object
        Forward Send Construct_Object

        Set peAnchors to anTopLeftRight
        //Set Color to clWhite
        Set pbAcceptDropFiles to True
        Set Border_Style to Border_Normal

        { Visibility=Private }
        Property Integer private.piColorOrg
        { Visibility=Private }
        Property Boolean private.pbIsHeaderGroup True // Don't touch!

        { Category="Appearance" }
        { Category="Appearance" }
        #IF (Required_RT_Version > 18)
            Property Integer piBitmapColOffset 4
            Property Integer piBitmapRowOffset 1
        #ELSE
            Property Integer piBitmapColOffset 1
            Property Integer piBitmapRowOffset 7
        #ENDIF

        { Category="Appearance" }
        Property Boolean pbUseHotspotColor True
        { Category="Appearance" }
        Property Integer piHeaderHotspotColor clAqua
        { Category="Label" }
        Property String psLabel ""
        { Category="Label" }
        Property Integer piLabelColor clBlack
        { Category="Label" }
        Property Boolean pbLabelFontItalics False
        { Category="Label" }
        Property Integer piLabelFontPointHeight False
        { Category="Label" }
        Property Integer piLabelFontPointWeight fw_Bold
        Property Integer piLabelColOffset 25
        { Category="Label" }
        { Category="Label" }
        Property Integer piLabelRowOffset 3 //4

    End_Procedure

    Procedure End_Construct_Object

        Object oImage_bmp is a cHeaderGroupImage
            Set Location to (piBitmapRowOffset(Self)) (piBitmapColOffset(Self))
            #IF (Required_RT_Version > 18)
                Set Size to 14 18
            #ELSE
                Set Size to 10 13
            #ENDIF
            Set Bitmap to (private.psImage(Self))
        End_Object

        Object oInfo_tb is a TextBox
            Set Auto_Size_State to False
            Set Size to 10 150
            Set Location to (piLabelRowOffset(Self)) (piLabelColOffset(Self))
            Set FontWeight to (piLabelFontPointWeight(Self))
            Set FontItalics to (pbLabelFontItalics(Self))
            Set FontPointHeight to (piLabelFontPointHeight(Self))
            Set Label to (psLabel(Self))
            Set TextColor to (piLabelColor(Self))
        End_Object

        Forward Send End_Construct_Object
    End_Procedure

    Procedure OnEnterArea Handle hoFrom
        Integer iColor
        Forward Send OnEnterArea hoFrom
        // ToDo: Not perfect, but works most of the time.
        //       When navigating to i.e a popup we don't want
        //       the coloring to appear. Else there will be 2
        //       cHeaderGroup's with the highlight color...
        // Is there a better way?
        If (hoFrom <> Desktop and hoFrom < Parent(Self)) Begin
            Procedure_Return
        End
        If (pbUseHotspotColor(Self) = True) Begin
            Get Color to iColor
            Set private.piColorOrg to iColor
            Get piHeaderHotspotColor to iColor
            Set Color to iColor
            Broadcast Recursive Set Color to iColor
        End
    End_Procedure

    Procedure OnExitArea Handle hoFrom
        Integer iColor
        Forward Send OnExitArea hoFrom
        If (pbUseHotspotColor(Self) = True) Begin
            Get private.piColorOrg to iColor
            Set Color to iColor
            Broadcast Recursive Set Color to iColor
        End
    End_Procedure

    // Public access message to change the group header text color at runtime.
    Procedure Set Label_Color Integer iColor
        Set TextColor of oInfo_tb to iColor
    End_Procedure

    Procedure NavigatePrevious
        Integer iMulti ivoid
        Handle hWnd

        Move False to Err
        Send Ignore_Error of Error_Object_Id DFERR_BAD_MESSAGE
        Get Select_Mode of (Focus(Self)) to iMulti
        Send Trap_Error of Error_Object_Id DFERR_BAD_MESSAGE
        If (Err) Begin
            Procedure_Return
        End

        If (iMulti = Multi_Select) Begin
            Send Previous
        End
        Else Begin
            Get Form_Window_Handle of (Focus(Self)) to hWnd
            Move (Sendmessage(hWnd,WM_KEYDOWN,Ascii(VK_LEFT),0)) to iVoid
        End
    End_Procedure

    Procedure NavigateNext
        Integer iMulti ivoid
        Handle hWnd

        Move False to Err
        Send Ignore_Error of Error_Object_Id DFERR_BAD_MESSAGE
        Get Select_Mode of (Focus(Self)) to iMulti
        Send Trap_Error of Error_Object_Id DFERR_BAD_MESSAGE
        If (Err) Begin
            Procedure_Return
        End

        If (iMulti = Multi_Select) Begin
            Send Next
        End
        Else Begin
            Get Form_Window_Handle of (Focus(Self)) to hWnd
            Move (Sendmessage(hWnd,WM_KEYDOWN,Ascii(VK_LEFT),0)) to iVoid
        End

    End_Procedure

    On_Key kLeftArrow  Send NavigatePrevious
    On_Key kRightArrow Send NavigateNext
End_Class

// We don't want the broadcast of setting color to set the background
// color for forms that are within a cHeaderGroup object.
Procedure Set Color for Form Integer eColor
    Boolean bIsHeaderGroup
    Send Ignore_Error of Error_Object_Id DFERR_BAD_MESSAGE
    Delegate Get private.pbIsHeaderGroup to bIsHeaderGroup
    Send Trap_Error of Error_Object_Id DFERR_BAD_MESSAGE
    If (bIsHeaderGroup = False) Begin
        Forward Set Color to eColor
    End
End_Procedure

