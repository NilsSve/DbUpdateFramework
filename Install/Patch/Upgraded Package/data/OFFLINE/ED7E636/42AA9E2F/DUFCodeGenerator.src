Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg
Use cCJCommandBarSystem.pkg
Use Dferror.pkg
Use Colr_dlg.pkg
Use Cursor.pkg
Use cDbUpdateHandler.pkg
Use vWin32fh.pkg

Object oHtmlHelp is a cHtmlHelp
End_Object

#IF (Required_FMAC_Version < 19)
    Send Stop_Box "Nope, that won't work. You need at least DataFlex 19.0 to run this program."
    Send Exit_Application
#ENDIF

Object oApplication is a cApplication
    Set psCompany to "RDC Tools International"
    Set psProduct to "The Database Update Framework - Database Compare and Code Generator"
    Set peHelpType to htHtmlHelp
    // Note: The help file settings gets changed by the Help toolbar button(s).
    Set psHelpFile to "DataFlex.chm"

    Property Handle phoDbUpdateHandler
    Property Handle phoTableDUFCodeGenerator_vw 0
    Property String psFilelistFrom ""
    Property Integer[] piaDifferences
    Property String psOrgOpenPath

    Object oConnection is a cConnection
        #IF (Required_RT_Version > 18)
        Use LoginEncryption.pkg
        Use DatabaseLoginDialog.dg
        #ENDIF
    End_Object

    // Set psOrgOpenPath at startup
    Procedure Save_DF_OPEN_PATH
        String sOrgOpenPath sDataPath
        Get_Attribute DF_OPEN_PATH to sOrgOpenPath
        // First remove the current Data folder path
        Get PathAtIndex of (phoWorkspace(ghoApplication)) sOrgOpenPath 1 to sDataPath
        Move (Replace(sDataPath, sOrgOpenPath, "")) to sOrgOpenPath
        If (Left(sOrgOpenPath, 2) = "\;") Begin
            Move (Replace("\;", sOrgOpenPath, "")) to sOrgOpenPath
        End
        Set psOrgOpenPath to sOrgOpenPath
    End_Procedure

    Procedure OnWorkspaceOpened
        Forward Send OnWorkspaceOpened
        Send Save_DF_OPEN_PATH
    End_Procedure

    Procedure Restore_DF_OPEN_PATH
        String sOrgOpenpath
        Get psOrgOpenPath to sOrgOpenpath
        Set_Attribute DF_OPEN_PATH to sOrgOpenPath
    End_Procedure

    Function ChangeFilelistPathing String sFileList Returns Boolean
        String sPath sSQLConnectionsIniName sDataPath sDriverID sServer sOrgOpenPath
        Boolean bExists bEmbedded
        Handle hoDbUpdateHandler hoSQLConnectionHandler hoSQLConnectionIniFile
        tSQLConnection SQLConnection
        Integer iRetval

        Move False to Err
        Move (Trim(sFileList)) to sFileList
        Get vFilePathExists sFileList to bExists
        If (bExists = False) Begin
            Function_Return False
        End

        Send Cursor_Wait of Cursor_Control
        Send Restore_DF_OPEN_PATH
        Close DF_ALL DF_PERMANENT
        Logout sDriverID sServer
        Get psDriverID of ghoDbUpdateFunctionLibrary to sDriverID
        Get psServer   of ghoDbUpdateFunctionLibrary to sServer

        Get ParseFolderName sFileList                      to sDataPath
        If (Right(sDataPath, 1) = "\") Begin
            Move (Left(sDataPath, (Length(sDataPath) -1))) to sDataPath
        End
        Set psDataPath of (phoWorkspace(ghoApplication))   to sDataPath
        Set psFileList of (phoWorkspace(ghoApplication))   to sFileList

        // Temporarily "redirect" the Open path to the current Data folder
        Get psOrgOpenPath to sOrgOpenPath
        Set_Attribute DF_OPEN_PATH to (sDataPath + ";" + sOrgOpenPath)
        Set_Attribute DF_FILELIST_NAME                     to sFileList

        Get vFolderFormat sDataPath to sPath
        // Note: We delete all cache files (*.cch) before
        // attempting to open any tables as a precausion, in case the table has been changed at the SQL end:
        Get vDeleteFile (sPath + "*.cch") to iRetval

        // Try to make a database driver connection:
        Get vParentPath sDataPath to sPath
        Get vFolderFormat sPath   to sPath
        Move (sPath + "Programs") to sPath
        Get vFolderFormat sPath   to sPath
        Move CS_SQLIniFileName to sSQLConnectionsIniName
        Get vFilePathExists (sPath + sSQLConnectionsIniName) to bExists
        If (bExists = False) Begin
            Get UtilFilelistIsDataFlexTablesOnly of ghoDbUpdateFunctionLibrary to bEmbedded
            If (bEmbedded = False) Begin
                Send Cursor_Ready of Cursor_Control
                Get YesNo_Box ("Couldn't find the DUF SQLConnections.ini file in the workspace Programs folder. Is there a DataFlex DFConnId.ini file in the Data folder that you want to open instead?") to iRetval
                If (iRetval = MBR_Yes) Begin
                    Send Cursor_Wait of Cursor_Control
                    Move "DFConnId.ini" to sSQLConnectionsIniName
                    #IF (Required_RT_Version > 18)
                    Send UnRegisterAllConnections of ghoConnection
                    Get AddAllConnections of ghoConnection to bExists
                    Set psIniFileName of (phoSQLConnectionIniFile(ghoSQLConnectionHandler)) to sSQLConnectionsIniName
                    Set psIniFilePath of (phoSQLConnectionIniFile(ghoSQLConnectionHandler)) to sPath
                    Get SetupSQLConnection of ghoSQLConnectionHandler True False to SQLConnection
                    #ENDIF
                End
            End
        End
        Else Begin
            Get phoDbUpdateHandler of ghoApplication to hoDbUpdateHandler
            Get phoSQLConnectionHandler of hoDbUpdateHandler to hoSQLConnectionHandler
            Get phoSQLConnectionIniFile of hoSQLConnectionHandler to hoSQLConnectionIniFile
            Set psIniFilePath of hoSQLConnectionIniFile to sPath
            Set psIniFileName of hoSQLConnectionIniFile to sSQLConnectionsIniName

            Get SetupSQLConnection of hoSQLConnectionHandler True True to SQLConnection
            Set pSQLConnection     of hoSQLConnectionHandler to SQLConnection
        End

        Send Cursor_Ready of Cursor_Control
        Function_Return (Err = False)
    End_Function

End_Object

Object oDbUpdateHandler is a cDbUpdateHandler
    Set Data_File_Field to File_Field DbVersion.DatabaseVersion
    Set phoDbUpdateHandler of ghoApplication to Self
End_Object

Object oToolTipController is a cToolTipController
    Move Self to ghoToolTipController
    Set pbBalloonStyle to False
    Set piIcon to TTI_INFO
    Set psTitle to "Information"
    Set piMaxWidth to 400
    Set piDurationPopup to 14000    // 14 seconds, needed for long tooltips.
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu17.pkg

Object oMain is a Panel
    Set Label to (psProduct(ghoApplication))
    Set Location to 4 3
    Set Size to 350 602
    Set piMinSize to 350 573
    Set Icon to "DUFUpdateCodeGenerator.ico"

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True
        #IF (Required_RT_Version >= 19)
            Set pbAutoResizeIcons to True
            Set pbTabbedWorkspaces to True
        Set pbLargeIcons to True
        Set peVisualTheme to xtpThemeVisualStudio2008
        #ENDIF

        Procedure OnCreateCommandBars
            Integer eTheme
            Forward Send OnCreateCommandBars
//            #IF (Required_RT_Version < 19)
                Send DisplayTabWorkspace
//            #ENDIF
            Get peVisualTheme to eTheme
            Send SetTheTheme eTheme
        End_Procedure

//        #IF (Required_RT_Version < 19)
        Procedure DisplayTabWorkspace
            Variant vTab vPaintManager
            Handle hoTab hoPaintManager hoOptions
            Integer iSize

            If (not(IsComObjectCreated(Self))) Begin
                Procedure_Return
            End

            Get OptionsObject to hoOptions

            // Create the tab workspace object. It will get created for the Client_Area so
            // each view will be displayd on a separate tab-page (instead of the standard VDF MDI-interface)
            Get Create (RefClass(cCJTabWorkspace)) to hoTab
            Get ComShowTabWorkspace True to vTab
            // Connect the CodeJock side to the DataFlex proxy object.
            Set pvComObject  of hoTab to vTab

            // We don't allow to close tabs as we have no menu system.
            Set ComFlags of hoTab to xtpWorkspaceHideAll
            Send ComEnableGroups of hoTab

            // Create a paint manager object that is needed to set some
            // of the tab-workspace properties.
            Get Create (RefClass(cCJTabPaintManager)) to hoPaintManager
            Get ComPaintManager of hoTab          to vPaintManager
            Set pvComObject     of hoPaintManager to vPaintManager

            // This will truncate the middle part of long items
            Set ComDrawTextPathEllipsis of hoPaintManager to True
            Set ComLayout               of hoPaintManager to xtpTabLayoutMultiRow

#IF (Required_RT_Version < 19)
            Move 24 to iSize
            Send ComSetIconSize         of hoOptions False iSize iSize  // Set icon size for Toolbar buttons.
            Move 24 to iSize
            Send ComSetIconSize         of hoPaintManager  iSize iSize  // Set icon size for Tab-workspace.
#ENDIF
//#ELSE
            Get Create (RefClass(cCJPaintManager)) to hoPaintManager
            Get ComPaintManager of hoPaintManager  to vPaintManager
            Set pvComObject     of hoPaintManager  to vPaintManager
            Set ComAutoResizeIcons of hoPaintManager to True
//#ENDIF
            Send Destroy of hoPaintManager
            Send ComRecalcLayout
            Send Destroy of hoTab
        End_Procedure
//        #ENDIF

        #IF (Required_RT_Version >= 19)
        Procedure OnCreateTabbedWorkspace Handle hoTabWorkspace Handle hoTabPaintManager
            Set ComShowIcons of hoTabPaintManager to True
            Send ComSetIconSize of hoTabPaintManager 24 24

            // This will truncate the middle part of long items
            Set ComDrawTextPathEllipsis of hoTabPaintManager to True
        End_Procedure
        #ENDIF

        Procedure SetTheTheme Integer eTheme
            Integer iColor
            Set peVisualTheme of ghoCommandBars to eTheme
            Send ComRecalcLayout of ghoCommandBars
            Get ComGetSpecialColor of ghoCommandBars XPCOLOR_TOOLBAR_FACE to iColor
            Broadcast Recursive Set Color of (Client_Id(phoMainPanel(ghoApplication))) to iColor
        End_Procedure

        // This is needed to get the "Key_Shift+Key_Tab" key combination to activate
        // the previous tab workspace view.
        Object oPreviousTabAction is a cCJAction
            Set piShortCutKey to (xtpKey_Shift + xtpKey_Ctrl) VK_TAB
            Procedure OnExecute Variant vCommandBarControl
                Handle hoCommandBars hoClientArea
                Forward Send OnExecute vCommandBarControl
                Get CommandBarSystemObject to hoCommandBars
                Get ClientAreaObject of hoCommandBars to hoClientArea
                If hoClientArea Begin
                    Send Switch_Next_View of hoClientArea
                End
            End_Procedure
        End_Object

        Object oEditToolBar is a cCJToolbar
            Set psTitle to "Edit Toolbar"
            Set peStretched to stStretch
            Set pbGripper to False

            Object oCutToolbarItem is a cCJCutMenuItem
                Set psImage to "ActionCutBlack.ico"
            End_Object

            Object oCopyToolbarItem is a cCJCopyMenuItem
                Set psImage to "ActionCopyBlack.ico"

            End_Object

            Object oPasteToolbarItem is a cCJPasteMenuItem
                Set psImage to "ActionPasteBlack.ico"
            End_Object

            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
                Set psImage to "ActionDeleteBlack.ico"
                Set pbControlBeginGroup to True
            End_Object

            Object oPromptToolItem is a cCJPromptMenuItem
                Set psImage to "ActionPromptBlack.ico"
                Set pbControlBeginGroup to True
            End_Object

            Object oClearToolItem is a cCJClearMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set psCaption      to "Clear/Add"
                Set pbControlBeginGroup to True
                Set psImage to "ActionClearBlack.ico"
                Function IsEnabled Returns Boolean
                    Function_Return True
                End_Function

            End_Object

//Register_Procedure ChangeFilelistPathing String sFilelistPath

            Object oCompareToolItem is a cCJMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set psCaption to "&Settings"
                Set psImage to "SQLBlack2.ico"
                Set piShortCutKey to xtpKey_Alt VK_S
                Set pbControlBeginGroup to True

                Procedure OnExecute Variant vCommandBarControl
                    tSQLConnection Connection
                    String sFileListFrom sCurrentFilelist
                    Handle hoFocus
                    Boolean bExists bOK

                    Move (Focus(Desktop)) to hoFocus
                    Forward Send OnExecute vCommandBarControl

                    // First change the "current" filelist depending on which
                    // Filelist form is active.
                    Get Value of hoFocus to sCurrentFilelist
                    Get vFilePathExists sCurrentFilelist to bExists
                    Get psFilelistFrom of ghoApplication to sFileListFrom
                    If (bExists = True and sCurrentFilelist <> "") Begin
                        Get ChangeFilelistPathing of ghoApplication sCurrentFilelist to bOK
                        Get psFilelistFrom of ghoApplication to sFileListFrom
                    End

                    If (sFileListFrom <> "") Begin
                        Get pSQLConnection of ghoSQLConnectionHandler to Connection
                    End
                    Send Activate_ReadOnlySQLMaintainConnections_dg of (Client_Id(ghoCommandBars)) Connection

                End_Procedure

            End_Object

            Object oAddToStudio_MenuItem is a cCJMenuItem
                Set psCaption to "Add to Studio"
                Set psDescription to "Add to Studio"
                Set psToolTip to "Add this tool to the DataFlex Studio's 'Tools' menu"
                Set psImage to "ActionAddBlack.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Popup of (oAddToStudio_dg(Client_Id(phoMainPanel(ghoApplication))))
                End_Procedure
            End_Object

            #IF (Required_RT_Version > 18)
            Object oTheme_MenuItem is a cCJMenuItem
                Set peControlType to xtpControlLabel
                Set pbControlBeginGroup to True
                Set psCaption to "Theme:"
//                Set psImage to "ActionThemes.ico"
            End_Object

            Object oThemeItem is a cCJMenuItem
                Set peControlType to xtpControlComboBox
                Set psToolTip to "Select a theme to change the appearance."

                Procedure OnCreateControl Handle hoObj
                    Integer iItem eTheme
                    Set ComWidth of hoObj to 250
                    Send FillComboList hoObj
                    Get peVisualTheme to eTheme
                    Get FindDataItem hoObj eTheme to iItem
                    Set ComListIndex of hoObj to (If(iItem,iItem,1))
                End_Procedure

                Function FindDataItem Handle hoCombo Integer eVal Returns Integer
                    Integer iCount i eTheme
                    Get ComListCount of hoCombo to iCount
                    For i from 1 to iCount
                        Get ComItemData of hoCombo i to eTheme
                        If (eTheme=eVal) Begin
                            Send SetTheTheme eTheme
                            Function_Return i
                        End
                    Loop
                    Function_Return 0
                End_Function

                Procedure AddTheme Handle hoCombo String sText Integer eTheme
                    Integer iCount
                    Get ComListCount of hoCombo to iCount
                    Increment iCount
                    Send ComAddItem  of hoCombo sText iCount
                    Set ComItemData  of hoCombo iCount to  eTheme
                End_Procedure

                Procedure FillComboList Handle hoCombo
                    Send ComClear     of hoCombo

                    Send AddTheme hoCombo "xtpThemeOffice2013Word" xtpThemeOffice2013Word
                    Send AddTheme hoCombo "xtpThemeOffice2013Outlook" xtpThemeOffice2013Outlook
                    Send AddTheme hoCombo "xtpThemeOffice2013Excel" xtpThemeOffice2013Excel
                    Send AddTheme hoCombo "xtpThemeOffice2013PowerPoint" xtpThemeOffice2013PowerPoint
                    Send AddTheme hoCombo "xtpThemeOffice2013Publisher" xtpThemeOffice2013Publisher
                    Send AddTheme hoCombo "xtpThemeOffice2013OneNote" xtpThemeOffice2013OneNote
                    Send AddTheme hoCombo "xtpThemeOffice2013Access" xtpThemeOffice2013Access
                    Send AddTheme hoCombo "xtpThemeOffice2003" xtpThemeOffice2003
                    Send AddTheme hoCombo "xtpThemeOffice2000" xtpThemeOffice2000
                    Send AddTheme hoCombo "xtpThemeOfficeXP" xtpThemeOfficeXP

                    Send AddTheme hoCombo "xtpThemeOffice2010Blue" xtpThemeOffice2010Blue
                    Send AddTheme hoCombo "xtpThemeOffice2010Black" xtpThemeOffice2010Black
                    Send AddTheme hoCombo "xtpThemeOffice2010Silver" xtpThemeOffice2010Silver

                    Send AddTheme hoCombo "xtpThemeOffice2007Aqua" xtpThemeOffice2007Aqua
                    Send AddTheme hoCombo "xtpThemeOffice2007Black" xtpThemeOffice2007Black
                    Send AddTheme hoCombo "xtpThemeOffice2007Blue" xtpThemeOffice2007Blue
                    Send AddTheme hoCombo "xtpThemeOffice2007Silver" xtpThemeOffice2007Silver

                    Send AddTheme hoCombo "xtpThemeVisualStudio2015Blue" xtpThemeVisualStudio2015Blue
                    Send AddTheme hoCombo "xtpThemeVisualStudio2015Light" xtpThemeVisualStudio2015Light
                    Send AddTheme hoCombo "xtpThemeVisualStudio2015Dark" xtpThemeVisualStudio2015Dark

                    Send AddTheme hoCombo "xtpThemeVisualStudio2012Light" xtpThemeVisualStudio2012Light
                    Send AddTheme hoCombo "xtpThemeVisualStudio2012Dark" xtpThemeVisualStudio2012Dark

                    Send AddTheme hoCombo "xtpThemeVisualStudio2008" xtpThemeVisualStudio2008
                    Send AddTheme hoCombo "xtpThemeVisualStudio6" xtpThemeVisualStudio6

                    Send AddTheme hoCombo "xtpThemeWindows7" xtpThemeWindows7

                    Send AddTheme hoCombo "xtpThemeWhidbey" xtpThemeWhidbey

                    Send AddTheme hoCombo "xtpThemeNativeWinXP" xtpThemeNativeWinXP
                End_Procedure

                Function CurrentTheme Handle vCommandBarControl Returns Integer
                    Handle hMessage hoCombo
                    Integer iIndex
                    // create and bind  proxy control
                    Get CreateProxyControl vCommandBarControl to hoCombo
                    // get the current selection
                    Get ComListIndex of hoCombo to iIndex
                    // note the index selections are 1 based
                    If (iIndex > 0) Begin
                        // get the ItemData for the selected item and send that message
                        Get ComItemData of hoCombo iIndex to hMessage
                        Function_Return hMessage
                    End
                    // dispose of the proxy control
                    Send Destroy of hoCombo
                End_Function

                Procedure OnExecute Variant vCommandBarControl
                    Integer eTheme
                    Integer iColor
                    Get CurrentTheme vCommandBarControl to eTheme
                    Set peVisualTheme of ghoCommandBars to eTheme
                    Send ComRecalcLayout of ghoCommandBars
                    Get ComGetSpecialColor of ghoCommandBars XPCOLOR_TOOLBAR_FACE to iColor
                    Broadcast Recursive Set Color of (Client_Id(phoMainPanel(ghoApplication))) to iColor
                End_Procedure

                Procedure SetTheTheme Integer eTheme
                    Integer iColor
                    Set peVisualTheme of ghoCommandBars to eTheme
                    Send ComRecalcLayout of ghoCommandBars
                    Get ComGetSpecialColor of ghoCommandBars XPCOLOR_TOOLBAR_FACE to iColor
                    Broadcast Recursive Set Color of (Client_Id(phoMainPanel(ghoApplication))) to iColor
                End_Procedure

                Function ConvertSystemColor Integer iColor Returns Integer
                    Integer iSysColor
                    If (iColor = clDefault or iColor = clNone) Begin    // If default color then use -1
                        Move clNone to iColor
                    End
                    Else If (iColor < 0) Begin    // If it is a system color (<0) then convert this into an RGB value
                        Move (iColor iand |CI$7FFFFFFF) to iSysColor    // extract the system color constant
                        Move (GetSysColor(iSysColor)) to iColor
                    End
                    Function_Return iColor
                End_Function

            End_Object

            Object oColorSelection_TextItem is a cCJMenuItem
                Set peControlType to xtpControlLabel
                Set pbControlBeginGroup to True
                Set psCaption to "Hotspot Color:"
            End_Object

            Object oColorSelection_Item is a cCJMenuItem
                Set psImage to "ColorSelectorBlack.ico"

                Object oColorDialog is a ColorDialog
                    Function SelectColor Returns Integer
                        Integer iRgbColor
                        Boolean bColorSelected

                        Move -1 to iRgbColor
                        Get Show_Dialog to bColorSelected
                        If (bColorSelected) Begin
                            Get SelectedColor to iRgbColor
                        End

                        Function_Return iRgbColor
                    End_Function
                End_Object

                Procedure OnExecute Variant vCommandBarControl
                    Integer iColor
                    Forward Send OnExecute vCommandBarControl
                    Get SelectColor of oColorDialog to iColor
                    If (iColor <> -1) Begin
                        Broadcast Recursive Set piHeaderHotspotColor of (Client_Id(phoMainPanel(ghoApplication))) to iColor
                    End
                End_Procedure

            End_Object

            Object oAbout_MenuItem is a cCJMenuItem
                Set psCaption to "About"
                Set psToolTip to "About Info"
                Set psDescription to "About the program"
                Set psImage to "ActionAboutBlack.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Activate_About of (Client_Id(ghoCommandBars))
                End_Procedure
            End_Object

            Object oHelpMenuItem is a cCJHelpMenuItem
                Set peControlType to xtpControlSplitButtonPopup
                Set psImage to "ActionHelpBlack.ico"

                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Set psHelpFile of ghoApplication to "DataFlex.chm"
                    Send ShowProgramHelp
                End_Procedure

                Object oHelpMenuItemLocal is a cCJMenuItem
                    Set psCaption to "Local HTML Help"
                    Set psImage to "ActionHelpBlack.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Set psHelpFile of ghoApplication to "DataFlex.chm"
                        Send ShowProgramHelp
                    End_Procedure
                End_Object

                Object oHelpMenuItemInternetBrowser is a cCJMenuItem
                    Set psCaption to "Online HTML Help"
                    Set psImage to "ActionHelpBlack.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Runprogram Shell Background "http://www.rdctools.com/HTMLHelp/Developer5.htm"
                    End_Procedure

                End_Object

            End_Object

            Object oExitMenuItem is a cCJExitMenuItem
                Set psToolTip to "Exit application"
                Set psDescription to "Exit the program (Alt+F4)"
                Set psImage to "ActionExitBlack.ico"
                Set pbControlBeginGroup to True
            End_Object
            #ENDIF

        End_Object

        Object oStatusBar is a cCJStatusBar

            Object oStatusPane1 is a cCJStatusBarPane
                Set piID to sbpIDIdlePane
                Set pbStyleStretch to True
            End_Object

            Object oStatusPane2 is a cCJStatusBarPane
                Set phoViewPane to Self
                Set pbStyleStretch to True
            End_Object

        End_Object

//        Object oSpacerBar is a cCJToolbar
//            Set pbDockNextTo to False
//            Set pbShowExpandButton to False
//            Set pbGripper to False
//            Set peStretched to stStretch
//            Set pbCustomizable to False
//            Set pbCloseable to False
//            Set pbEnableDocking to False
//            Set pbHideWrap to True
//
//            Object oFiller is a cCJMenuItem
//            End_Object
//
//        End_Object

    End_Object

    Object oClientArea is a ClientArea
        Use ManageSQLConnections.dg
        Use AddToStudio.dg
        Use CompareDatabases.vw
        Use TableDUFCodeGenerator.vw

        Use StdAbout.pkg
        Use CompareDatabases.rv
        Procedure Activate_About
            Send DoAbout "" "" ("Copyright 2016-2018" * psCompany(ghoApplication)) "Author: Nils Svedmyr" "DUFUpdateCodeGenerator.bmp" "E-mail: mailto:support@rdctools.com" "Web-site: www.rdctools.com"
        End_Procedure

        On_Key Key_Ctrl+Key_Tab           Send Switch_Next_View
        On_Key Key_Ctrl+Key_Shift+Key_Tab Send Switch_Prior_View
    End_Object

    // Note that we have overriden the cHtmlHelp "GetHelpFile" function
    // in the oHtmlHelp object, so we need to explitetly send the message
    // to that object.
    Procedure ShowProgramHelp
        Send DoDisplayKeyword of oHtmlHelp "The Database Update Framework"
    End_Procedure

End_Object

// Because we want to display the compare databases view first.
Send Activate_oCompareDatabases_vw of (Client_Id(phoMainPanel(ghoApplication)))
Start_UI
