Use cSQLConnectionIniFile.inc

Class cDbUpdateGenericDatabaseDriver is a cObject
    Procedure Construct_Object
        Forward Send Construct_Object
        { MethodType=Property Category="Database" InitialValue="Default" }
        { EnumList="DATAFLEX_ID, MSSQLDRV_ID, DB2_DRV_ID, ODBC_DRV_ID, DFBTRDRV_ID SQL_DRV, MDSPGSQL, MDSMYSQL, ORA_DRV" }
        Property String psDriverID DATAFLEX_ID
    End_Procedure

    Function ServerKeyword String sServer Returns String
        String sRetval
        If (Uppercase(sServer) contains ("." + CS_SQLIniDSNKeyword)) Begin
            Move CS_SQLIniFileDSNKeyword to sRetval    
        End                                        
        Else Begin
            Move CS_SQLIniDSNKeyword to sRetval
        End
            
        Function_Return sRetval
    End_Function

    Function ConstructConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns String
        String sConnect sServerKeyWord sDriverID
        Integer iClientVersion
        
        Get psDriverID to sDriverID
        Get ServerKeyword sServer to sServerKeyWord
        Move (sConnect + sServerKeyWord + "=" + sServer) to sConnect
        If (sServerKeyWord = CS_SQLIniDSNKeyword or sServerKeyWord = CS_SQLIniFileDSNKeyword) Begin
            Move "" to sDatabase
        End
        
        If (sDatabase <> "") Begin
            Move (sConnect + ";" + CS_SQLIniDatabaseKeyword + "=" + sDatabase) to sConnect
        End
        If (bTrusted = True) Begin
            Move (sConnect + ";" + CS_SQLIniTrustedKeyword + "=Yes") to sConnect
        End
        Else Begin
            Move (sConnect + ";" + CS_SQLIniUIDKeyword + "=" + sUserID + ";" + CS_SQLIniPWDKeyword + "=" + sPassword) to sConnect
        End
        
        If (sDriverID = MSSQLDRV_ID) Begin
            Get SQLClientVersionInteger MSSQLDRV_ID to iClientVersion
            If (iClientVersion >= 18) Begin
                Append sConnect ";Encrypt=Optional;TrustServerCertificate=Yes"
                Move (Replaces(" ", sConnect, "")) to sConnect
            End
        End
        
        Function_Return sConnect
    End_Function

    Function DbLogin String sConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns Boolean
        Boolean bLoginSuccessful
        String sDriverID

        Get psDriverID to sDriverID
        If (sDriverID = DATAFLEX_ID or sDriverID = "") Begin
            Function_Return True
        End
        Move 0 to LastErr  // Do NOT use the Err flag, it will be set true by the login command although it is successful.
        If (bTrusted = False and sDatabase <> "") Begin
            Move (SFormat("SERVER=%1;DATABASE=%2", sServer, sDatabase)) to sServer
            Login sServer sUserId sPassword sDriverID  
        End
        Else Begin
            Login sConnectionString "" "" sDriverID
        End
        Move (LastErr = 0) to bLoginSuccessful
        Function_Return bLoginSuccessful
    End_Function

    Function SQLClientVersionInteger String sDriverID Returns Integer
        Integer iNumberOfDrivers iCount iDriver iClientVersion
        String sDriver
        
        Move 0 to iDriver
        Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
        If (iNumberOfDrivers = 1) Begin
            Load_Driver sDriverID
            Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
        End
        For iCount from 1 to iNumberOfDrivers
            Get_Attribute DF_DRIVER_NAME of iCount to sDriver
            If (Uppercase(sDriver) = Uppercase(sDriverID)) Begin
                Move iCount to iDriver
                Move iNumberOfDrivers to iCount // We're done.
            End
        Loop
    
        // This info is (at current) only available for the MS SQL driver:
        If (iDriver <> 0 and sDriverID = MSSQLDRV_ID) Begin
            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iDriver to iClientVersion
        End
        Function_Return iClientVersion
    End_Function
    
End_Class

Class cDbUpdateMSSQLDriver is a cDbUpdateGenericDatabaseDriver
    Function ServerKeyword String sServer Returns String
        Function_Return CS_SQLIniServerKeyword
    End_Function

    Function DbLogin String sConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns Boolean
        Integer iClientVersion
        String sConnect
        Boolean bLoginSuccessful
        
        Move (sConnect * "SERVER=" + sServer) to sConnect
        If (sDatabase <> "") Begin
            Move (sConnect * ";DATABASE=" + sDatabase) to sConnect
        End
        If (bTrusted = True) Begin
            Move (sConnect * ";TRUSTED_CONNECTION=Yes") to sConnect
        End
        Else Begin
            Move (sConnect * ";UID=" + sUserID * ";PWD=" + sPassword) to sConnect
        End

        Get SQLClientVersionInteger MSSQLDRV_ID to iClientVersion
        If (iClientVersion >= 18) Begin
            Append sConnect ";Encrypt=Optional;TrustServerCertificate=Yes"
            Move (Replaces(" ", sConnect, "")) to sConnect
        End
        
        Login sConnect "" "" MSSQLDRV_ID

        Move (not(Err)) to bLoginSuccessful
        Function_Return bLoginSuccessful
    End_Function

    Function SQLClientVersionInteger String sDriverID Returns Integer
        Integer iNumberOfDrivers iCount iDriver iClientVersion
        String sDriver
        
        Move 0 to iDriver
        Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
        If (iNumberOfDrivers = 1) Begin
            Load_Driver sDriverID
            Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
        End
        For iCount from 1 to iNumberOfDrivers
            Get_Attribute DF_DRIVER_NAME of iCount to sDriver
            If (Uppercase(sDriver) = Uppercase(sDriverID)) Begin
                Move iCount to iDriver
                Move iNumberOfDrivers to iCount // We're done.
            End
        Loop
    
        // This info is (at current) only available for the MS SQL driver:
        If (iDriver <> 0 and sDriverID = MSSQLDRV_ID) Begin
            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iDriver to iClientVersion
        End
        Function_Return iClientVersion
    End_Function
    
End_Class

Class cDbUpdateODBCDriver is a cDbUpdateGenericDatabaseDriver
    Function DbLogin String sConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns Boolean
        Boolean bLoginSuccessful
        String sDriverID

        Get psDriverID to sDriverID
        Move (Trim(sDriverID)) to sDriverID
        If (sDriverID = DATAFLEX_ID or sDriverID = "") Begin
            Function_Return True
        End
        Move 0 to LastErr  // Do NOT use the Err flag, it will be set true by the login command although it is successful.
        If (bTrusted = False) Begin
            If (Uppercase(sServer) contains ("." + String(CS_SQLIniDSNKeyword))) Begin
                Move (CS_SQLIniFileDSNKeyword + "=" + sServer) to sServer
            End
            Else If (not(Uppercase(sServer) contains CS_SQLIniDSNKeyword)) Begin
                Move (CS_SQLIniDSNKeyword + "=" + sServer) to sServer
            End
            Login sServer sUserId sPassword sDriverID  
        End
        Else Begin
            Login sConnectionString "" "" sDriverID
        End
        Move (LastErr = 0) to bLoginSuccessful

        Function_Return bLoginSuccessful
    End_Function
End_Class

Class cDbUpdateDB2Driver is a cDbUpdateGenericDatabaseDriver
    Function DbLogin String sConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns Boolean
        Boolean bLoginSuccessful
        String sDriverID

        Move False to Err
        Get psDriverID to sDriverID
        If (not(Uppercase(sServer) contains CS_SQLIniDSNKeyword)) Begin
            Move (CS_SQLIniDSNKeyword + "=" + sServer) to sServer
        End
        Login sServer sUserId sPassword sDriverID

        Move (not(Err)) to bLoginSuccessful
        Function_Return bLoginSuccessful
    End_Function
End_Class

Class cDbUpdatePSQLDriver is a cDbUpdateGenericDatabaseDriver
    Function DbLogin String sConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns Boolean
        Boolean bLoginSuccessful
        String sDriverID

        Move False to Err
        Get psDriverID to sDriverID
//        If (not(Uppercase(sServer) contains CS_SQLIniDSNKeyword)) Begin
//            Move (CS_SQLIniDSNKeyword + "=" + sServer) to sServer
//        End
        Login sServer sUserId sPassword sDriverID

        Move (not(Err)) to bLoginSuccessful
        Function_Return bLoginSuccessful
    End_Function
End_Class

Class cDbUpdateDataFlexDriver is a cDbUpdateGenericDatabaseDriver
    Function ConstructConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns String
        Function_Return ""
    End_Function
End_Class

Class cDbUpdateDatabaseDriver is a cObject
    Procedure Construct_Object
        Forward Send Construct_Object
        Property String psDriverID DATAFLEX_ID
        Property Handle phoDriverSpecificObject 
    End_Procedure

    Function CreateDriver Returns Handle
        String sDriverID sObjectName
        Handle hoDriver hcDriverClass

        Get psDriverID to sDriverID
        Case Begin
            Case (sDriverID = MSSQLDRV_ID)
                Move (RefClass(cDbUpdateMSSQLDriver))    to hcDriverClass
                Move "oDbUpdateMSSQLDriver" to sObjectName
                Case Break
            Case (sDriverID = ODBC_DRV_ID)
                Move (RefClass(cDbUpdateODBCDriver))     to hcDriverClass
                Move "oDbUpdateODBCDriver" to sObjectName
                Case Break
            Case (sDriverID = DB2_DRV_ID)
                Move (RefClass(cDbUpdateDB2Driver))      to hcDriverClass
                Move "oDbUpdateDB2Driver" to sObjectName
                Case Break               
            Case Else
                // DATAFLEX_ID = Default driver
                Move (RefClass(cDbUpdateDataFlexDriver)) to hcDriverClass
                Move "oDbUpdateDataFlexDriver" to sObjectName
                Move DATAFLEX_ID to sDriverID
        Case End

        Get Create hcDriverClass to hoDriver
        Set Name of hoDriver to sObjectName
        Set psDriverID of hoDriver to sDriverID
        Set phoDriverSpecificObject to hoDriver

        Function_Return hoDriver
    End_Function

    Procedure DestroyDriver
        If (phoDriverSpecificObject(Self)) Begin
            Send Destroy of (phoDriverSpecificObject(Self))
        End
    End_Procedure

    Function ConstructConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns String
        String sConnect
        Handle hoDriver

        Get phoDriverSpecificObject to hoDriver
        If (hoDriver = 0) Begin
            Get CreateDriver to hoDriver
        End
        Get ConstructConnectionString of hoDriver sServer sDatabase bTrusted sUserID sPassword to sConnect
        Send DestroyDriver
        Function_Return sConnect
    End_Function

    Function DbLogin String sConnectionString String sServer String sDatabase Boolean bTrusted String sUserID String sPassword Returns Boolean
        Boolean bLoginSuccessful
        Handle hoDriver

        Get phoDriverSpecificObject to hoDriver
        If (hoDriver = 0) Begin
            Get CreateDriver to hoDriver
        End
        Get DbLogin of hoDriver sConnectionString sServer sDatabase bTrusted sUserID sPassword to bLoginSuccessful
        Send DestroyDriver
        Function_Return bLoginSuccessful
    End_Function

End_Class
