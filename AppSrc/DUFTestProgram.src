
#If (!@ > 190)
    CompilerLevelWarning All On
#ENDIF
Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg
Use cCJCommandBarSystem.pkg
Use cCJSkinFramework.pkg
Use cDbUpdateHandler.pkg

Object oHtmlHelp is a cHtmlHelp
    Set pbAlwaysOnTop to False

    // Overriden class message to also handle internet HTML Help links;
    // which in which case we should not try to find the path to the help file.
    Function GetHelpFile Returns String
        String sHelpFile

        Get psHelpFile of ghoApplication to sHelpFile
        If (sHelpFile <> "" and not(sHelpFile contains "http:")) Begin
            Get_File_Path sHelpFile to sHelpFile
        End
        Function_Return sHelpFile
    End_Function

End_Object

Object oApplication is a cApplication
    Set peHelpType to htHtmlHelp

    // Note: These help file settings gets changed by the Help toolbar button(s).
    Set psHelpFile to "Developer5.chm"
//    Set psHelpFile to "http://www.rdctools.com/HTMLHelp/Developer5.htm"

    Set pbPreserveEnvironment to True
    Set psProduct to "Database Update Framework Lab"
    Set psCompany to "RDC Tools International"

    // DF 19 and up.
    #IF (!@ > 182)
    Object oConnection is a cConnection
        Use LoginEncryption.pkg
        Use DatabaseLoginDialog.dg
    End_Object
    #ENDIF

End_Object   

Object oDbUpdateHandler is a cDbUpdateHandler 
    Set piDbVersionFieldNumber to 1
    Set piDbVersionFileNumber to 1
    
End_Object

Object oCJSkinFramework is a cCJSkinFramework
    Set pbLoadPreference to True
End_Object

Object oToolTipController is a cToolTipController
    Set piDurationPopup to 10000
    Set piMaxWidth to 500
    Move Self to ghoToolTipController
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu17.pkg
Use cSkinComboBoxCJMenuItem.pkg

Object oMain is a Panel
    Set Label to "Test Program - The Database Update Framework"
    Set Location to 2 2
    Set Size to 309 493
    Set piMinSize to (Hi(Size(Self))) (Low(Size(Self)))
    Set Icon to "TestTools.ico"

    Property Handle phoViewMenu 0
    Property Handle phoReportMenu 0

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True
        #IF (!@ >= 190)
            Set pbAutoResizeIcons to True
            Set pbTabbedWorkspaces to True // Switch on for DF 19 to see the new tabbed-view look.
            Set peVisualTheme to xtpThemeOffice2013Publisher
        Set pbLargeIcons to True
        #ENDIF

        Procedure OnCreateCommandBars
            Handle hoOptions
            
            Forward Send OnCreateCommandBars
            
            #IF (!@ < 190)
                Send DisplayTabWorkspace
            #ELSE
            Get OptionsObject to hoOptions
            Send ComSetIconSize of hoOptions False 32 32  // Set icon size for Toolbar buttons.
            #ENDIF     
        End_Procedure

        #IF (!@ < 190)
        Procedure DisplayTabWorkspace
            Variant vTab vPaintManager
            Handle hoTab hoPaintManager  hoOptions

            If (not(IsComObjectCreated(Self))) Begin
                Procedure_Return
            End

            Get OptionsObject to hoOptions

            // Create the tab workspace object. It will get created for the Client_Area so
            // each view will be displayd on a separate tab-page (instead of the standard VDF MDI-interface)
            Get Create (RefClass(cCJTabWorkspace)) to hoTab
            Get ComShowTabWorkspace True to vTab
            // Connect the CodeJock side to the DataFlex proxy object.
            Set pvComObject  of hoTab to vTab

            Set ComFlags of hoTab to xtpWorkspaceShowCloseTab
            Send ComEnableGroups of hoTab

            // Create a paint manager object that is needed to set some
            // of the tab-workspace properties.
            Get Create (RefClass(cCJTabPaintManager)) to hoPaintManager
            Get ComPaintManager of hoTab          to vPaintManager
            Set pvComObject     of hoPaintManager to vPaintManager
            // This will truncate the middle part of long items
            Set ComDrawTextPathEllipsis of hoPaintManager to True
            Set ComLayout               of hoPaintManager to xtpTabLayoutMultiRow

//#IF (Required_RT_Version < 19)
//            Move 16 to iSize
//            Send ComSetIconSize         of hoOptions False iSize iSize  // Set icon size for Toolbar buttons.
//            Move 24 to iSize
//            Send ComSetIconSize         of hoPaintManager  iSize iSize  // Set icon size for Tab-workspace.
//#ELSE
            Get Create (RefClass(cCJPaintManager)) to hoPaintManager
            Get ComPaintManager of hoPaintManager  to vPaintManager
            Set pvComObject     of hoPaintManager  to vPaintManager
            Set ComAutoResizeIcons of hoPaintManager to True
//#ENDIF
            Send Destroy of hoPaintManager
            Send ComRecalcLayout
            Send Destroy of hoTab
        End_Procedure
        #ENDIF

        #IF (!@ >= 190)
        Procedure OnCreateTabbedWorkspace Handle hoTabWorkspace Handle hoTabPaintManager
            Set ComShowIcons of hoTabPaintManager to True
//            Send ComSetIconSize of hoTabPaintManager 24 24

            // This will truncate the middle part of long items
            Set ComDrawTextPathEllipsis of hoTabPaintManager to True
        End_Procedure
        #ENDIF

        // This is needed to get the "Key_Shift+Key_Tab" key combination to activate
        // the previous tab workspace view.
        Object oPreviousTabAction is a cCJAction
            Set piShortCutKey to (xtpKey_Shift + xtpKey_Ctrl) VK_TAB
            Procedure OnExecute Variant vCommandBarControl
                Handle hoCommandBars hoClientArea
                Forward Send OnExecute vCommandBarControl
                Get CommandBarSystemObject to hoCommandBars
                Get ClientAreaObject of hoCommandBars to hoClientArea
                If hoClientArea Begin
                    Send Switch_Next_View of hoClientArea
                End
            End_Procedure
        End_Object

        Object oToolBar is a cCJToolbar
            Set psTitle to "Edit Toolbar"
            Set pbGripper to False
            Set peStretched to stStretch

            Object oCutToolbarItem is a cCJCutMenuItem  
                Set psImage to "ActionCut1.ico"
            End_Object

            Object oCopyToolbarItem is a cCJCopyMenuItem
                Set psImage to "ActionCopy1.ico"
            End_Object

            Object oPasteToolbarItem is a cCJPasteMenuItem
                Set psImage to "ActionPaste1.ico"
            End_Object

            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
                Set psImage to "ActionDelete1.ico"
                Set pbControlBeginGroup to True
            End_Object

            #IF (!@ > 180)
            Object oTheme_tb is a cCJMenuItem
                Set peControlType to xtpControlLabel
                Set psCaption to "Theme:"
                Set pbControlBeginGroup to True
            End_Object

            Object oThemeItem is a cCJMenuItem
                Set peControlType to xtpControlComboBox
                Set psToolTip to "Select a theme to change the appearance of menu- and toolbars."

                Procedure OnCreateControl Handle hoObj
                    Integer iItem eTheme
                    Set ComWidth of hoObj to 250
                    Send FillComboList hoObj
                    Get peVisualTheme to eTheme
                    Get FindDataItem hoObj eTheme to iItem
                    Set ComListIndex of hoObj to (If(iItem,iItem,1))
                End_Procedure

                Function FindDataItem Handle hoCombo Integer eVal Returns Integer
                    Integer iCount i eTheme
                    Get ComListCount of hoCombo to iCount
                    For i from 1 to iCount
                        Get ComItemData of hoCombo i to eTheme
                        If (eTheme=eVal) Begin
                            Send SetTheTheme eTheme
                            Function_Return i
                        End
                    Loop
                    Function_Return 0
                End_Function

                Procedure AddTheme Handle hoCombo String sText Integer eTheme
                    Integer iCount
                    Get ComListCount of hoCombo to iCount
                    Increment iCount
                    Send ComAddItem  of hoCombo sText iCount
                    Set ComItemData  of hoCombo iCount to  eTheme
                End_Procedure

                Procedure FillComboList Handle hoCombo
                    Send ComClear     of hoCombo
                    #IF (!@ > 182)
                    Send AddTheme hoCombo "xtpThemeOffice2013Word" xtpThemeOffice2013Word
                    Send AddTheme hoCombo "xtpThemeOffice2013Outlook" xtpThemeOffice2013Outlook
                    Send AddTheme hoCombo "xtpThemeOffice2013Excel" xtpThemeOffice2013Excel
                    Send AddTheme hoCombo "xtpThemeOffice2013PowerPoint" xtpThemeOffice2013PowerPoint
                    Send AddTheme hoCombo "xtpThemeOffice2013Publisher" xtpThemeOffice2013Publisher
                    Send AddTheme hoCombo "xtpThemeOffice2013OneNote" xtpThemeOffice2013OneNote
                    Send AddTheme hoCombo "xtpThemeOffice2013Access" xtpThemeOffice2013Access
                    Send AddTheme hoCombo "xtpThemeOffice2003" xtpThemeOffice2003
                    Send AddTheme hoCombo "xtpThemeOffice2000" xtpThemeOffice2000
                    Send AddTheme hoCombo "xtpThemeOfficeXP" xtpThemeOfficeXP

                    Send AddTheme hoCombo "xtpThemeOffice2010Blue" xtpThemeOffice2010Blue
                    Send AddTheme hoCombo "xtpThemeOffice2010Black" xtpThemeOffice2010Black
                    Send AddTheme hoCombo "xtpThemeOffice2010Silver" xtpThemeOffice2010Silver

                    Send AddTheme hoCombo "xtpThemeOffice2007Aqua" xtpThemeOffice2007Aqua
                    Send AddTheme hoCombo "xtpThemeOffice2007Black" xtpThemeOffice2007Black
                    Send AddTheme hoCombo "xtpThemeOffice2007Blue" xtpThemeOffice2007Blue
                    Send AddTheme hoCombo "xtpThemeOffice2007Silver" xtpThemeOffice2007Silver

                    Send AddTheme hoCombo "xtpThemeVisualStudio2015Blue" xtpThemeVisualStudio2015Blue
                    Send AddTheme hoCombo "xtpThemeVisualStudio2015Light" xtpThemeVisualStudio2015Light
                    Send AddTheme hoCombo "xtpThemeVisualStudio2015Dark" xtpThemeVisualStudio2015Dark

                    Send AddTheme hoCombo "xtpThemeVisualStudio2012Light" xtpThemeVisualStudio2012Light
                    Send AddTheme hoCombo "xtpThemeVisualStudio2012Dark" xtpThemeVisualStudio2012Dark

                    Send AddTheme hoCombo "xtpThemeVisualStudio2008" xtpThemeVisualStudio2008
                    Send AddTheme hoCombo "xtpThemeVisualStudio6" xtpThemeVisualStudio6

                    Send AddTheme hoCombo "xtpThemeWindows7" xtpThemeWindows7

                    Send AddTheme hoCombo "xtpThemeWhidbey" xtpThemeWhidbey

                    Send AddTheme hoCombo "xtpThemeNativeWinXP" xtpThemeNativeWinXP
                    #ENDIF
                End_Procedure

                Function CurrentTheme Handle vCommandBarControl Returns Integer
                    Handle hMessage hoCombo
                    Integer iIndex
                    // create and bind  proxy control
                    Get CreateProxyControl vCommandBarControl to hoCombo
                    // get the current selection
                    Get ComListIndex of hoCombo to iIndex
                    // note the index selections are 1 based
                    If (iIndex > 0) Begin
                        // get the ItemData for the selected item and send that message
                        Get ComItemData of hoCombo iIndex to hMessage
                        Function_Return hMessage
                    End
                    // dispose of the proxy control
                    Send Destroy of hoCombo
                    Function_Return 0
                End_Function

                Procedure OnExecute Variant vCommandBarControl
                    Integer eTheme
                    Integer iColor
                    Get CurrentTheme vCommandBarControl to eTheme
                    Set peVisualTheme of ghoCommandBars to eTheme
                    Send ComRecalcLayout of ghoCommandBars
                    Get ComGetSpecialColor of ghoCommandBars XPCOLOR_TOOLBAR_FACE to iColor
                    Broadcast Recursive Set Color of (Client_Id(phoMainPanel(ghoApplication))) to iColor
                End_Procedure

                Procedure SetTheTheme Integer eTheme
                    Integer iColor
                    Set peVisualTheme of ghoCommandBars to eTheme
                    Send ComRecalcLayout of ghoCommandBars
                    Get ComGetSpecialColor of ghoCommandBars XPCOLOR_TOOLBAR_FACE to iColor
                    Broadcast Recursive Set Color of (Client_Id(phoMainPanel(ghoApplication))) to iColor
                End_Procedure

                Function ConvertSystemColor Integer iColor Returns Integer
                    Integer iSysColor
                    If (iColor = clDefault or iColor = clNone) Begin    // If default color then use -1
                        Move clNone to iColor
                    End
                    Else If (iColor < 0) Begin    // If it is a system color (<0) then convert this into an RGB value
                        Move (iColor iand |CI$7FFFFFFF) to iSysColor    // extract the system color constant
                        Move (GetSysColor(iSysColor)) to iColor
                    End
                    Function_Return iColor
                End_Function

            End_Object
            #ENDIF

//            Object oSkin_tb is a cCJMenuItem
//                Set peControlType to xtpControlLabel
//                Set psCaption to "Skin:"
//                Set pbControlBeginGroup to True
//            End_Object
//
//            Object oSkinSelector_cf is a cSkinComboBoxCJMenuItem
//                Set psToolTip to "Select a skin to change the appearance of the application. Either select a Theme OR a Skin, not both."
//            End_Object
//
//            #IF (!@ >= 190)
//            #ENDIF

            Object oAbout_MenuItem is a cCJMenuItem
                Set psCaption to "About"
                Set psToolTip to "About Info"
                Set psDescription to "About the program"
                Set psImage to "ActionAbout1.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Activate_About of (Client_Id(ghoCommandBars))
                End_Procedure
            End_Object

            Object oHelpMenuItem is a cCJHelpMenuItem
                Set peControlType to xtpControlSplitButtonPopup
                Set psImage to "ActionHelp1.ico"

                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Set psHelpFile of ghoApplication to "DataFlex.chm"
                    Send ShowProgramHelp
                End_Procedure

                Object oHelpMenuItemLocal is a cCJMenuItem
                    Set psCaption to "Local HTML Help"
                    Set psImage to "ActionHelp1.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Set psHelpFile of ghoApplication to "DataFlex.chm"
                        Send ShowProgramHelp
                    End_Procedure
                End_Object

                Object oHelpMenuItemInternetBrowser is a cCJMenuItem
                    Set psCaption to "Internet Online HTML Help"
                    Set psImage to "ActionHelp1.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Send vShellExecute "open" "http://www.rdctools.com/HTMLHelp/Developer5.htm" "" ""
                    End_Procedure

                End_Object
            End_Object

            Object oExitMenuItem is a cCJExitMenuItem
                Set psImage to "ActionExit1.ico"
                Set psToolTip to "Exit application"
                Set psDescription to "Exit the program (Alt+F4)"
                Set pbControlBeginGroup to True
            End_Object
        End_Object

//        Object oSpacerBar is a cCJToolbar
//            Set pbDockNextTo to False
//            Set pbShowExpandButton to False
//            Set pbGripper to False
//            Set peStretched to stStretch
//            Set pbCustomizable to False
//            Set pbCloseable to False
//            Set pbEnableDocking to False
//            Set pbHideWrap to True
//
//            Object oFiller is a cCJMenuItem
//            End_Object
//
//        End_Object

        Object oStatusBar is a cCJStatusBar

            Object oStatusPane1 is a cCJStatusBarPane
                Set piID to sbpIDIdlePane
                Set pbStyleStretch to True
            End_Object
            Object oStatusPane2 is a cCJStatusBarPane
                Set phoViewPane to Self
                Set pbStyleStretch to True
            End_Object

        End_Object

    End_Object

    Object oClientArea is a ClientArea

//        Use Dd_debug.dg // This Provides access to dd debugger by pressing ctrl+d within any view. Good for debugging

        Use StdAbout.pkg
        Use DatabaseSelection.dg
        Use SQLDatabaseBackup.dg
        Use SQLConnections.vw
        Use SQLFunctions.vw
        Use APIFunctions.vw
        Use UtilFunctions.vw

        Procedure Activate_About
            Send DoAbout "" "" ("Copyright 2016-2020" * psCompany(ghoApplication)) "Author: Nils Svedmyr" "TestTools.bmp" "E-mail: mailto:support@rdctools.com" "Web-site: www.rdctools.com" ("This tool was created with DataFlex" * String(C_DFVersion) * "from Data Access Worldwide. Please visit http://www.dataaccess.com for a free personal copy of DataFlex.")
        End_Procedure

        On_Key Key_Ctrl+Key_Tab           Send Switch_Prior_View
        On_Key Key_Ctrl+Key_Shift+Key_Tab Send Switch_Next_View
        On_Key Key_Ctrl+Key_W             Send Close_Panel
    End_Object

    // Note that we have overriden the cHtmlHelp "GetHelpFile" function
    // in the oHtmlHelp object, so we need to explitetly send the message
    // to that object.
    Procedure ShowProgramHelp
        Send DoDisplayKeyword of oHtmlHelp "DbUpdateFrameworkTests" //"cDbUpdateFunctionLibrary"
    End_Procedure

    On_Key Key_F1 Send ShowProgramHelp
End_Object

// We do this to activate the first view:
//Send Activate_oSQLConnections_vw of (Client_Id(phoMainPanel(ghoApplication)))
Start_UI
